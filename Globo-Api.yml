openapi: '3.0.1'

info:
  title: API Studio VS
  description: APIs de integração dos sistemas VS
  version: '1.0'

servers:
  - url: /api/v1
    description: Servidor Principal

tags:
  - name: Shoppings
    description: Operações relacionadas aos Shoppings.
  - name: Atividades
    description: Operações relacionadas as atividades.
  - name: Marcas
    description: Operações relacionadas as marcas.
  - name: UPVMs
    description: Operações relacionadas as UPVM's.
  - name: Lucs
    description: Operações relacionadas as LUC's.
  - name: Propostas
    description: Operações relacionadas as Propostas.

security:
  - token: []

paths:
  /shoppings:   #* API de Shoppings
    get:
      operationId: getShopping
      summary: Lista de Shoppings
      description: Lista todos os shoppings e suas informações
      security:
        - token: []
      tags:
        - Shoppings
      responses:
        '200':
          description: Recuperado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/shopping_detailed'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'

  /atividades:   #* API de Atividades
    get:
      operationId: getAtividade
      summary: Lista de atividades
      description: Lista as informações de todas atividades do plano abrasce.
      security:
        - token: []
      tags:
        - Atividades
      responses:
        '200':
          description: Recuperado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/atividade'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'

  /marcas:   #* API de Marcas
    get:
      operationId: getMarca
      summary: Lista de marcas
      description: Lista as informações de todas as marcas.
      security:
        - token: []
      tags:
        - Marcas
      responses:
        '200':
          description: Recuperado com sucesso.
          content:
            application/json:
              schema:
                type: object 
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/marca'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    post:
      operationId: postMarca
      summary: Envia marca
      description: Cria uma nova marca.
      security:
        - token: []
      tags:
        - Marcas
      requestBody:
        required: true
        description: Valores a serem inseridos na nova marca
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/marca'
      responses:
        '201': 
          description: Marca criada com sucesso
          content:
            application/json:
              schema:
                type: object 
                properties:
                  data:
                    $ref: '#/components/schemas/marca'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
  /marcas/{marca_nome}:
    parameters:
      - $ref: "#/components/parameters/marca"
    put:
      operationId: putMarca
      summary: Atualiza marca
      description: Atualiza uma marca já existente.
      security:
        - token: []
      tags:
        - Marcas
      requestBody:
        required: true
        description: Valores dos campos a serem atualizados
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/marca'
      responses:
        '200':
          description: Atualizado com sucesso
          content:
            application/json:
              schema:
                type: object 
                properties:
                  data:
                    $ref: '#/components/schemas/marca'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
  /marcas/{marca_nome}/atividades:
    parameters:
      - $ref: "#/components/parameters/marca"
    get:
      operationId: getAssocMarcaAtv
      summary: Lista de Associação
      description: Lista as atividades associadas a marca.
      security:
        - token: []
      tags:
        - Marcas
      responses:
        '200':
          description: Recuperado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/marca_atividade'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /marcas/{marca_nome}/atividades/{atv_cod}:
    parameters:
      - $ref: "#/components/parameters/marca"
      - $ref: "#/components/parameters/atividade"
    post:
      operationId: postAssocMarcaAtv
      summary: Associa Marca x Atividade
      description: Faz a associação Marca x Atividade
      security:
        - token: []
      tags:
        - Marcas
      responses:
        '201':
          description: Associação feita com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/marca_atividade'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
    delete:
      operationId: deleteAssocMarcaAtv
      summary: Deleção da associação
      description: Deleta a associação da Marca x Atividade
      security:
        - token: []
      tags:
        - Marcas
      responses:
        '200':
          description: Deletado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/marca_atividade'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'

  /shoppings/{shopping_cod}/upvms:   #* API de UPVMs
    parameters:
      - $ref: "#/components/parameters/shopping"
    get:
      operationId: getUpvm
      summary: Lista da UPVM
      description: Lista de informações sobre a UPVM
      security:
        - token: []
      tags:
        - UPVMs
      responses:
        '200':
          description: Recuperado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/upvm'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /shoppings/{shopping_cod}/upvms/{upvm_cod}:
    parameters:
      - $ref: "#/components/parameters/shopping"
      - $ref: "#/components/parameters/upvm"
      - $ref: "#/components/parameters/comp"
    get:
      operationId: getUpvmVal
      summary: Lista de valores UPVM
      description: Lista dos valores da UPVM mensal.
      security:
        - token: []
      tags:
        - UPVMs
      responses:
        '200':
          description: Recuperado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/upvm_val'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'

  /shoppings/{shopping_cod}/lucs:   #* API de LUCs
    parameters:
      - $ref: "#/components/parameters/shopping"
    get:
      operationId: getLuc
      summary: Lista das LUC's.
      description: Lista das LUC's com as suas informações.
      security:
        - token: []
      tags:
        - Lucs
      responses:
        '200':
          description: Recuperado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/luc'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'

  /propostas/{proposta_id}: #* API de Propostas
    parameters:
      - $ref: "#/components/parameters/proposta"
    get:
      operationId: getProposta
      summary: Lista a proposta
      description: Lista uma proposta com suas infromações.
      security:
        - token: []
      tags:
        - Propostas
      responses:
        '200':
          description: Recuperado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/proposta'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /propostas:   
    post:
      operationId: postProposta
      summary: Envia proposta
      description: Cria uma nova proposta.
      security:
        - token: []
      tags:
        - Propostas
      requestBody:
        required: true
        description: Valores a serem inseridos na nova proposta
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/proposta'
      responses:
        '201':
          description: Proposta criada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/proposta'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'

components:
  securitySchemes:
    token:
      type: apiKey
      name: Authorization
      description: Token de autorização
      in: header

  responses:
    #* Bad request
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Solicitação inválida. Favor verificar os parâmetros.
    #* Unauthorized
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Operação não autorizada
    #* Unauthorized
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Registro já existente.
    #* Internal Server Error
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Ocorreu um erro interno

  parameters:
    #* Parametro do marca_nome
    marca:
      name: marca_nome
      in: path
      description: Nome da Marca
      required: true
      schema:
        type: string
      example:
        Renner
    #* Parametro do atv_cod
    atividade:
      name: atv_cod
      in: path
      description: Código da Atividade
      required: true
      schema:
        type: string
      example:
        "1.18"
    #* Parametro do shopping_cod
    shopping:
      name: shopping_cod
      in: path
      description: Codigo do Shopping
      required: true
      schema:
        type: string
      example:
        5120-fe00-6b75-0079-2b07
    #* Parametro do upvm_cod
    upvm:
      name: upvm_cod
      in: path
      description: Codigo da UPVM
      required: true
      schema:
        type: string
      example:
        '01'
    #* Parametro do comp
    comp:
      name: comp
      in: query
      description: Competência de referencia<br/>Passar como int. <br/>Podendo ser YYYY ou YYYYMM.
      required: true
      schema:
        type: integer
      example:
        202312
    #* Parametro do luc_cod
    luc:
      name: luc_cod
      in: path
      description: Codigo da LUC
      required: true
      schema:
        type: string
      example:
        108Q
    #* Parametro do proposta_id
    proposta:
      name: proposta_id
      in: path
      description: ID da Proposta
      required: true
      schema:
        type: integer
      example:
        152

  schemas:
    #* Corpo Shopping
    shopping:
      title: Shopping
      type: object
      properties:
        shopping_cod:
          type: string
          description: Codigo do Shopping
          maxLength: 24
          example: 5120-fe00-6b75-0079-2b07
        shopping_nome:
          type: string
          description: Nome do Shopping
          maxLength: 50
          example: Shopping Nova America
        shopping_sigla:
          type: string
          description: Sigla do Shopping
          maxLength: 5
          example: SNA
    #* Corpo Avançado Shopping
    shopping_detailed:
      title: Shopping Detalhado
      type: object
      properties:
        shopping_cod:
          type: string
          description: Codigo do Shopping
          maxLength: 24
          example: 5120-fe00-6b75-0079-2b07
        shopping_nome:
          type: string
          description: Nome do Shopping
          maxLength: 50
          example: Shopping Nova America
        shopping_sigla:
          type: string
          description: Sigla do Shopping
          maxLength: 5
          example: SNA
        shopping_abl: 
          type: number
          description: Valor total de ABL do Shopping
          example: 125000.10
        shopping_tot_lucs: 
          type: integer
          description: Quantidade de LUC's do Shopping
          example: 685
    #* Corpo Atividade
    atividade:
      title: Atividade
      type: object
      properties:
        atv_cod:
          type: string
          description: Codigo da Atividade
          maxLength: 20
          example: '1.18'
        atv_nome:
          type: string
          description: Nome da Atividade
          maxLength: 30
          readOnly: true
          example: Outros
        atv_nome_completo:
          type: string
          description: Nome completo da Atividade
          maxLength: 96
          readOnly: true
          example: LOJAS ÂNCORAS - Outros
    #* Corpo Basico da Marca
    marca:
      title: Marca
      type: object
      properties:
        marca_nome:
          type: string
          description: Nome da Marca
          maxLength: 50
          example: Exemplo 1
        marca_mnemonico:
          type: string
          description: Mnemonico da Marca
          maxLength: 8
          example: EX1
        marca_ativa:
          type: boolean
          description: Status da Marca
          example: true
    #* Corpo da Associação Marca X Atividade
    marca_atividade:
      title: Atividade da Marca
      allOf:
        - $ref: '#/components/schemas/marca'
        - type: object
          properties:
            marca_atv_assoc:
              type: array
              items:
                $ref: '#/components/schemas/atividade'
    #* Corpo Basico da UPVM
    upvm:
      title: UPVM
      type: object
      properties:
        upvm_cod:
          type: string
          description: Codigo da UPVM
          maxLength: 2
          example: '00'
        upvm_nome:
          type: string
          description: Nome da UPVM
          maxLength: 50
          readOnly: true
          example: 'INCC'
        upvm_natureza:
          type: string
          description: >
            Natureza da UPVM
              * `M` - Moeda <br/><br/>
              * `V` - Variação <br/><br/>
              * `C` - Calculada <br/><br/>
          enum:
            - M
            - V
            - C
          maxLength: 1
          readOnly: true
          example: 'M'
    #* Corpo dos Valores da UPVM
    upvm_val:
      title: Valores da UPVM
      type: object
      properties:
        ano:
          type: integer
          description: Ano do Valor da UPVM
          example: 2023
        mes:
          type: integer
          description: Mes do Valor da UPVM
          example: 11
        upvm_valor:
          type: number
          description: Valor da UPVM
          example: 1.00000001
    #* Corpo da LUC
    luc:
      title: LUC
      type: object
      properties:
        luc_cod:
          type: string
          description: Codigo da LUC
          maxLength: 10
          example: '041'
        luc_ativa:
          type: boolean
          description: Status da LUC
          example: true
        luc_abl: 
          type: number
          description: Area Bruta Locavel da LUC
          example: 2000.01
        luc_frente: 
          type: number
          description: Frente (m²) da LUC
          example: 2.1
        info_fat:
          type: object
          properties:
            luc_encargo_crd:
              type: number
              description: Valor Coeficiente de Rateio da LUC
              example: 0.12222
        ult_loc:
          type: object
          properties:
            con_cod: 
              type: string
              description: Codigo do Contrato
              maxLength: 5
              example: '18121'
            data_ini: 
              type: string
              description: Data de Inicio da Locação (YYYY-MM-DD)
              example: '2007-10-02'
            data_fin: 
              type: string
              description: Data de Fim da Locação (YYYY-MM-DD)
              example: '2012-10-02'
    #* Corpo da Proposta
    proposta:
      title: Proposta
      type: object
      properties:
        proposta_id:
          type: integer
          description: ID da Proposta
          readOnly: true
          example: 152
        shopping_cod:
          type: string
          description: Codigo do Shopping
          maxLength: 24
          writeOnly: true
          example: 5120-fe00-6b75-0079-2b07
        data_locacao_ini:
          type: string
          description: Data de Inicio de Locação (YYYY-MM-DD)
          example: '2003-05-16'
        data_locacao_fin:
          type: string
          description: Data de Fim de Locação (YYYY-MM-DD)<br/><i>Para informar contrato com prazo indeterminado, informar o valor zerado (0)</i>
          example: '2025-05-15'
        data_prev_assinatura:
          type: string
          description: Previsão de Assinatura (YYYY-MM-DD)
          example: '2003-05-16'
        data_inauguracao:
          type: string
          description: Data da Inauguração (YYYY-MM-DD)
          example: '2003-05-16'
        proposta_obs:
          type: string
          description: Observação da Proposta
          example: Proposta não informa venda
        status:
          type: object
          readOnly: true
          properties:
            status:
              type: string
              description: > 
                Status da Proposta
                  * `Q` - Na fila para sincronização <br/><br/>
                  * `D` - Erro na Sincronização <br/><br/>
                  * `I` - Importado no Aprovações <br/><br/>
                  * `M` - Em manutenção no Aprovações <br/><br/>
                  * `L` - Liberado para aprovação <br/><br/>
                  * `A` - Aprovado <br/><br/>
                  * `E` - Enviado para o Faturamento <br/><br/>
                  * `U` - Recusado <br/><br/>
                  * `R` - Rejeitado <br/><br/>
                  * `S` - Solicitação de cancelamento <br/><br/>
                  * `C` - Cancelado <br/><br/>
              enum: 
                - Q
                - D
                - I
                - M
                - L
                - A
                - E
                - U
                - R
                - S
                - C
              maxLength: 1
              example: A
            con_cod:
              type: string
              description: Numero do Contrato gerado
              maxLength: 5
              example: '00010'
            mensagem:
              type: string
              description: Motivo do Status da Proposta
              example: Recusado por estar incoerente
        marca:
          $ref: "#/components/schemas/marca_proposta"
        lucs:
          type: array
          items:
            $ref: "#/components/schemas/luc_ocupacao"
        atividades:
          $ref: "#/components/schemas/atividade"
        info:
          type: object
          properties:
            tipo_propriedade:
              type: string
              description: >
                Tipo da Propriedade. Será utilizado para definição do subtipo de LUC Virtual (Caso exista LUC Virtual, este campo será obrigatório).
                  * `MR` - Merchandising <br/><br/>
                  * `FE` - Feiras e Eventos <br/><br/>
                  * `PA` - Painel <br/><br/>
                  * `PO` - Popup <br/><br/>
              enum:
                - MR
                - FE
                - PA
                - PO
              maxLength: 2
              example: MR
            luc_virtual_abl:
              type: number
              description: ABL da LUC Virtual<br/>Para criação de uma LUC Virtual, informar a ABL maior ou igual a 0.<br/>Caso não haja nescessidade de criação da LUC Virtual, não enviar este objeto.
              example: 0
            param:
              type: object
              properties:
                crd:
                  type: number
                  description: Coeficiente de Rateio
                  example: 6.447500001
            reajuste:
              type: object
              properties:
                data_base:
                  type: string
                  description: Data Base de Reajuste (YYYY-MM-DD)<br/>Para propostas de mídia, informar a data de início de locação do contrato.
                  example: '2003-05-16'
                upvm:
                  $ref: "#/components/schemas/upvm"
            alumin:
              type: array
              items:
                type: object
                properties:
                  tipo_cobranca:
                    type: string
                    description: >
                      Tipo de Cobrança do Valor da Faixa
                        * `M` - Mensal <br/><br/>
                        * `P` - Correspondente a todo período <br/><br/>
                    enum:
                      - M
                      - P
                    maxLength: 1
                    example: M
                  valor:
                    type: number
                    description: Valor do Aluguel Mínimo da Faixa (valor integral sem desconto)
                    example: 1478.52
                  valor_desc:
                    type: number
                    description: Valor do Aluguel Mínimo com Desconto da Faixa (Se não houver desconto, informar o mesmo valor integral da faixa)
                    example: 1374.24
                  data_ini:
                    type: string
                    description: Data de Inicio da Faixa (YYYY-MM-DD)
                    example: '2003-05-16'
                  data_fin:
                    type: string
                    description: Data de Fim da Faixa (YYYY-MM-DD)</br><i>Quando o contrato possui prazo indeterminado, a faixa de aluguel mínimo também deve possuir.<br/><i>Para informar faixa com prazo indeterminado, informar o valor zerado (0).</i>
                    example: '2025-05-15'
            aluperc:
              type: object
              properties:
                info_vda:
                  type: boolean
                  description: Proposta Informa Venda
                  example: true
                perc:
                  type: number
                  description: Percentual do Aluguel Complementar da Proposta
                  example: 7.58 
            cond_esps:
              type: object
              properties:
                carencia:
                  type: integer
                  description: Dias de Carencia
                  example: 90
                encargo:
                  type: number
                  description: Encargo
                  example: 654.79
                fpp:
                  type: number
                  description: Fundo de Promoção
                  example: 321.24
                fpp_perc:
                  type: number
                  description: Fundo de Promoção em Percentual
                  example: 8.21
            perc_alus:
              type: object
              properties:
                maio50:
                  type: boolean
                  description: Acrescimo de 50% no Aluguel Minimo
                  example: false
                novembro50:
                  type: boolean
                  description: Acrescimo de 50% no Aluguel Minimo
                  example: false
                dezembro100:
                  type: boolean
                  description: Acrescimo de 100% no Aluguel Minimo
                  example: false
        pessoas:
          type: array
          items:
            description: Discriminador no campo pessoa_tipo
            oneOf:
              - $ref: "#/components/schemas/pessoa_fisica"
              - $ref: "#/components/schemas/pessoa_juridica"
            discriminator:
              propertyName: pessoa_tipo
    #* Corpo da Ocupação da LUC
    luc_ocupacao:
      title: Ocupação da LUC
      type: object
      properties:
        luc_cod:
          type: string
          description: Codigo da LUC
          maxLength: 10
          example: '041'
        luc_pri:
          type: boolean
          description: Luc Principal
          example: true
        data_ini:
          type: string
          description: Data de Inicio de Ocupação (YYYY-MM-DD)
          example: '2003-05-16'
        data_fin:
          type: string
          description: Data de Fim de Ocupação (YYYY-MM-DD)<br/><i>Quando o contrato possui prazo indeterminado, a LUC também deve possuir.<br/><i>Para informar LUC com prazo indeterminado, informar o valor zerado (0).</i>
          example: '2025-05-15'
    #* Corpo da Marca da Proposta
    marca_proposta:
      title: Marca da Proposta
      type: object
      properties:
        marca_nome:
          type: string
          description: Nome da Marca
          maxLength: 50
          example: Exemplo 1
        marca_mnemonico:
          type: string
          description: Mnemonico da Marca
          maxLength: 8
          readOnly: true
          example: EX1
        marca_ativa:
          type: boolean
          description: Status da Marca
          readOnly: true
          example: true
    #* Corpo de Pessoa Física
    pessoa_fisica:
      title: Pessoa Fisica
      type: object
      properties:
        pessoa_tipo:
          type: string
          description: >
            Tipo da Pessoa
              * `J` - Jurídica <br/><br/>
              * `F` - Físicas <br/><br/>
          maxLength: 1
          enum:
            - J
            - F
          example: F
        pessoa_cod:
          type: string
          description: CPF / CNPJ da Pessoa
          maxLength: 11
          example: "11122233344"
        pessoa_nome:
          type: string
          description: Nome da Pessoa / Razão Social
          maxLength: 50
          example: Antonio Manuel Silva Gomes Perico
        pessoa_nacionalidade:
          type: string
          description: Nacionalidade da Pessoa
          maxLength: 15
          example: Brasileiro
        estado_civil:
          type: string
          description: >
            Estado Civil da Pessoa Física
              * `S` - Solteiro(a) <br/><br/>
              * `C` - Casado(a) <br/><br/>
              * `V` - Viuvo(a) <br/><br/>
              * `J` - Separado(a) Judicialmente <br/><br/>
          enum:
            - S
            - C
            - V
            - J
          maxLength: 1
          example: S
        profissao:
          type: string
          description: Profissão da Pessoa Física
          maxLength: 20
          example: Contador
        identificacao:
          type: string
          description: RG da Pessoa Física
          maxLength: 25
          example: '1133333322'
        orgao_expedicao:
          type: string
          description: Orgão de Expedição da Pessoa Física
          maxLength: 25
          example: SSPSP
        data_expedicao:
          type: string
          description: Data de Expedição da Pessoa Física (YYYY-MM-DD)
          example: '2002-12-28'
        data_nascimento:
          type: string
          description: Data de Nascimento da Pessoa Física (YYYY-MM-DD)
          example: '2002-12-28'
        qualificacao:
          type: object
          properties:
            locatario:
              type: boolean
              description: Qualificação de Locatário
              example: true
            fiador:
              type: boolean
              description: Qualificação de Fiador
              example: true
            representante:
              type: boolean
              description: Qualificação de Representante Legal
              example: true
            sacado:
              type: boolean
              description: Qualificação de Sacado
              example: true
            email:
              type: boolean
              description: Qualificação de Email para envio de boleto
              example: true
            sublocario:
              type: boolean
              description: Qualificação de Sublocatário
              example: true
        endereco:
          type: object
          properties:
            cep:
              type: string
              description: CEP da Pessoa
              maxLength: 8
              example: '20040001'
            endereco:
              type: string
              description: Endereço da Pessoa
              maxLength: 30
              example: Avenida Rio Branco
            numero:
              type: string
              description: Numero do Endereço da Pessoa
              maxLength: 10
              example: '110'
            complemento:
              type: string
              description: Complemento do Endereço da Pessoa
              maxLength: 30
              example: 10° Andar
            bairro:
              type: string
              description: Bairro do Endereço da Pessoa
              maxLength: 25
              example: Centro
            ibge_cod:
              type: string
              description: Código do IBGE
              example: 04557
            cidade:
              type: string
              description: Cidade da Pessoa
              maxLength: 40
              example: Rio de Janeiro
            estado:
              type: string
              description: Sigla do Estado da Pessoa
              maxLength: 2
              example: RJ
        contato:
          type: object
          properties:
            telefone_ddd:
              type: integer
              description: DDD do Telefone da Pessoa
              example: 21
            telefone_numero:
              type: integer
              description: Numero do Telefone da Pessoa
              example: 99999991
            fax_ddd:
              type: integer
              description: DDD do Fax da Pessoa
              example: 21
            fax_numero:
              type: integer
              description: Numero do Fax da Pessoa
              example: 999999991
            celular_ddd:
              type: integer
              description: DDD do Celular da Pessoa
              example: 21
            celular_numero:
              type: integer
              description: Numero do Celular da Pessoa
              example: 999999991
            telcomercial_ddd:
              type: integer
              description: DDD do Telefone Comercial da Pessoa
              example: 21
            telcomercial_numero:
              type: integer
              description: Numero do Telefone Comercial da Pessoa
              example: 999999991
            telefone2_ddd:
              type: integer
              description: DDD do Telefone 2 da Pessoa
              example: 21
            telefone2_numero:
              type: integer
              description: Numero do Telefone 2 da Pessoa
              example: 99999991
            celular2_ddd:
              type: integer
              description: DDD do Celular 2 da Pessoa
              example: 21
            celular2_numero:
              type: integer
              description: Numero do Celular 2 da Pessoa
              example: 999999991
            email:
              type: string
              description: Email da Pessoa
              maxLength: 100
              example: teste@teste.com
    #* Corpo de Pessoa Juridica
    pessoa_juridica:
      title: Pessoa Juridica
      type: object
      properties:
        pessoa_tipo:
          type: string
          description: >
            Tipo da Pessoa
              * `J` - Jurídica <br/><br/>
              * `F` - Físicas <br/><br/>
          maxLength: 1
          enum:
            - J
            - F
          example: J
        pessoa_cod:
          type: string
          description: CPF / CNPJ da Pessoa
          maxLength: 14
          example: "11222333444455"
        pessoa_nome:
          type: string
          description: Nome da Pessoa / Razão Social
          maxLength: 50
          example: Banco do Brasil
        inscricao_estadual:
          type: string
          description: Inscrição Estadual
          maxLength: 15
          example: "99999999"
        inscricao_municipal:
          type: string
          description: Inscrição Municipal
          maxLength: 15
          example: "9999999"
        qualificacao:
          type: object
          properties:
            locatario:
              type: boolean
              description: Qualificação de Locatário
              example: true
            fiador:
              type: boolean
              description: Qualificação de Fiador
              example: true
            representante:
              type: boolean
              description: Qualificação de Representante Legal
              example: true
            sacado:
              type: boolean
              description: Qualificação de Sacado
              example: true
            email:
              type: boolean
              description: Qualificação de Email para envio de boleto
              example: true
            sublocario:
              type: boolean
              description: Qualificação de Sublocatário
              example: true
        endereco:
          type: object
          properties:
            cep:
              type: string
              description: CEP da Pessoa
              maxLength: 8
              example: '20040001'
            endereco:
              type: string
              description: Endereço da Pessoa
              maxLength: 30
              example: Avenida Rio Branco
            numero:
              type: string
              description: Numero do Endereço da Pessoa
              maxLength: 10
              example: '110'
            complemento:
              type: string
              description: Complemento do Endereço da Pessoa
              maxLength: 30
              example: 10° Andar
            bairro:
              type: string
              description: Bairro do Endereço da Pessoa
              maxLength: 25
              example: Centro
            ibge_cod:
              type: string
              description: Código do IBGE
              example: 04557
            cidade:
              type: string
              description: Cidade da Pessoa
              maxLength: 40
              example: Rio de Janeiro
            estado:
              type: string
              description: Sigla do Estado da Pessoa
              maxLength: 2
              example: RJ
        contato:
          type: object
          properties:
            telefone_ddd:
              type: integer
              description: DDD do Telefone da Pessoa
              example: 21
            telefone_numero:
              type: integer
              description: Numero do Telefone da Pessoa
              example: 99999991
            fax_ddd:
              type: integer
              description: DDD do Fax da Pessoa
              example: 21
            fax_numero:
              type: integer
              description: Numero do Fax da Pessoa
              example: 999999991
            celular_ddd:
              type: integer
              description: DDD do Celular da Pessoa
              example: 21
            celular_numero:
              type: integer
              description: Numero do Celular da Pessoa
              example: 999999991
            email:
              type: string
              description: Email da Pessoa
              maxLength: 100
              example: teste@teste.com
